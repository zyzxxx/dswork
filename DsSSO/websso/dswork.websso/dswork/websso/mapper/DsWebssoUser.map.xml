<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
	"-//ibatis.apache.org//DTD Mapper 3.0//EN" 
	"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="dswork.websso.model.DsWebssoUser">

<insert id="insert" parameterType="dswork.websso.model.DsWebssoUser">
	insert into DS_WEBSSO_USER
	(ID, IDCARD, USERACCOUNT, SSOACCOUNT, CITY, COUNTRY, PROVINCE, NAME, SEX, EMAIL, MOBILE, PHONE, AVATAR, OPENIDQQ, OPENIDALIPAY, OPENIDWECHAT)
	values
	(#{id}, #{idcard}, #{useraccount}, #{ssoaccount}, #{city}, #{country}, #{province}, #{name}, #{sex}, #{email}, #{mobile}, #{phone}, #{avatar}, #{openidqq}, #{openidalipay}, #{openidwechat})
</insert>

<delete id="delete">
	delete from DS_WEBSSO_USER where ID=#{id}
</delete>

<update id="update" parameterType="dswork.websso.model.DsWebssoUser">
	update DS_WEBSSO_USER set
		IDCARD=#{idcard},
		USERACCOUNT=#{useraccount},
		SSOACCOUNT=#{ssoaccount},
		CITY=#{city},
		COUNTRY=#{country},
		PROVINCE=#{province},
		NAME=#{name},
		SEX=#{sex},
		EMAIL=#{email},
		MOBILE=#{mobile},
		PHONE=#{phone},
		AVATAR=#{avatar},
		OPENIDQQ=#{openidqq},
		OPENIDALIPAY=#{openidalipay},
		OPENIDWECHAT=#{openidwechat}
	where ID=#{id}
</update>

<resultMap id="result" type="dswork.websso.model.DsWebssoUser">
	<id property="id" column="ID" />
	<result property="idcard" column="IDCARD" />
	<result property="useraccount" column="USERACCOUNT" />
	<result property="ssoaccount" column="SSOACCOUNT" />
	<result property="city" column="CITY" />
	<result property="country" column="COUNTRY" />
	<result property="province" column="PROVINCE" />
	<result property="name" column="NAME" />
	<result property="sex" column="SEX" />
	<result property="email" column="EMAIL" />
	<result property="mobile" column="MOBILE" />
	<result property="phone" column="PHONE" />
	<result property="avatar" column="AVATAR" />
	<result property="openidqq" column="OPENIDQQ" />
	<result property="openidalipay" column="OPENIDALIPAY" />
	<result property="openidwechat" column="OPENIDWECHAT" />
</resultMap>

<sql id="columns">ID, IDCARD, USERACCOUNT, SSOACCOUNT, CITY, COUNTRY, PROVINCE, NAME, SEX, EMAIL, MOBILE, PHONE, AVATAR, OPENIDQQ, OPENIDALIPAY, OPENIDWECHAT</sql>
	
<sql id="dynamicWhere">
	<where>
		<if test="@Ognl@isNotEmpty(id)"> and ID like #{id, typeHandler=LikeTypeHandler} </if>
	</where>
</sql>

<select id="select" resultMap="result">
	select <include refid="columns" /> from DS_WEBSSO_USER where ID=#{id}
</select>

<select id="selectByUseraccount" resultMap="result">
	select <include refid="columns" /> from DS_WEBSSO_USER where USERACCOUNT=#{useraccount}
</select>

<select id="selectByOpenid" resultMap="result">
	select <include refid="columns" /> from DS_WEBSSO_USER
	<where>
		<if test="@Ognl@isNotEmpty(openidqq)"> and OPENIDQQ=#{openidqq} </if>
		<if test="@Ognl@isNotEmpty(openidalipay)"> and OPENIDALIPAY=#{openidalipay} </if>
		<if test="@Ognl@isNotEmpty(openidwechat)"> and OPENIDWECHAT=#{openidwechat} </if>
		<if test="@Ognl@isEmpty(openidqq) and @Ognl@isEmpty(openidalipay) and @Ognl@isEmpty(openidwechat)"> and ID='-10000' </if>
	</where>
</select>

<select id="selectByOpenidqq" resultMap="result">
	select <include refid="columns" /> from DS_WEBSSO_USER where OPENIDQQ=#{openid}
</select>

<select id="selectByOpenidalipay" resultMap="result">
	select <include refid="columns" /> from DS_WEBSSO_USER where OPENIDALIPAY=#{openid}
</select>

<select id="selectByOpenidwechat" resultMap="result">
	select <include refid="columns" /> from DS_WEBSSO_USER where OPENIDWECHAT=#{openid}
</select>

<select id="query" resultMap="result">
	select <include refid="columns" /> from DS_WEBSSO_USER
	<include refid="dynamicWhere" />
</select>

<select id="queryCount" resultType="int">
	select count(1) from DS_WEBSSO_USER
	<include refid="dynamicWhere" />
</select>

</mapper>
