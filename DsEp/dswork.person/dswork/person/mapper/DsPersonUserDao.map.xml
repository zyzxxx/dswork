<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
	"-//ibatis.apache.org//DTD Mapper 3.0//EN" 
	"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="dswork.person.dao.DsPersonUserDao">

<insert id="insert" parameterType="dswork.person.model.DsPersonUser">
	insert into DS_PERSON_USER
	(ID, IDCARD, ACCOUNT, PASSWORD, NAME, STATUS, USERTYPE, EMAIL, MOBILE, PHONE, CAKEY, CREATETIME)
	values
	(#{id}, lower(#{idcard}), lower(#{account}), #{password}, #{name}, #{status}, #{usertype}, #{email}, #{mobile}, #{phone}, #{cakey}, #{createtime})
</insert>

<delete id="delete">
	delete from DS_PERSON_USER where ID=#{id}
</delete>

<update id="update" parameterType="dswork.person.model.DsPersonUser">
	update DS_PERSON_USER set
		NAME=#{name},
		EMAIL=#{email},
		MOBILE=#{mobile},
		PHONE=#{phone},
		CAKEY=#{cakey}
	where ID=#{id}
</update>

<update id="updatePassword">
	update DS_PERSON_USER set PASSWORD=#{password} where ID=#{id}
</update>

<update id="updateStatus">
	update DS_PERSON_USER set STATUS=#{status} where ID=#{id}
</update>

<resultMap id="result" type="dswork.person.model.DsPersonUser">
	<id property="id" column="ID" />
	<result property="idcard" column="IDCARD" />
	<result property="account" column="ACCOUNT" />
	<result property="password" column="PASSWORD" />
	<result property="name" column="NAME" />
	<result property="status" column="STATUS" />
	<result property="usertype" column="USERTYPE" />
	<result property="email" column="EMAIL" />
	<result property="mobile" column="MOBILE" />
	<result property="phone" column="PHONE" />
	<result property="cakey" column="CAKEY" />
	<result property="createtime" column="CREATETIME" />
</resultMap>

<sql id="columns">
	ID, IDCARD, ACCOUNT, PASSWORD, NAME, STATUS, USERTYPE, EMAIL, MOBILE, PHONE, CAKEY, CREATETIME
</sql>

<sql id="dynamicWhere">
	<where>
		<if test="@Ognl@isNotEmpty(account)"> and ACCOUNT=#{account} </if>
		<if test="@Ognl@isNotEmpty(name)"> and NAME like #{name, typeHandler=LikeTypeHandler} </if>
		<if test="@Ognl@isNotEmpty(status)"> and STATUS=#{status} </if>
		<if test="@Ognl@isNotEmpty(keyvalue)"> and (MOBILE like #{keyvalue, typeHandler=LikeTypeHandler} or PHONE like #{keyvalue, typeHandler=LikeTypeHandler}) </if>
	</where>
</sql>

<select id="getUserByAccount" resultMap="result">
	select <include refid="columns" /> from DS_PERSON_USER where ACCOUNT=#{account}
</select>

<select id="getUserByIdcard" resultMap="result">
	select <include refid="columns" /> from DS_PERSON_USER where IDCARD=#{idcard}
</select>

<select id="select" resultMap="result">
	select <include refid="columns" /> from DS_PERSON_USER where ID=#{id}
</select>

<select id="query" resultMap="result">
	select <include refid="columns" /> from DS_PERSON_USER
	<include refid="dynamicWhere" />
</select>

<select id="queryCount" resultType="int">
	select count(1) from DS_PERSON_USER
	<include refid="dynamicWhere" />
</select>

</mapper>
